{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","console","log","map","concat","toConsumableArray","Provider","name","email","phone","dispatch","_this","setState","react_default","a","createElement","value","this","props","children","Component","Consumer","Contact","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showContactInfo","onDeleteClick","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","axios","delete","t0","stop","_x","_x2","apply","arguments","renderHelper","_this$props$contact","className","onClick","style","cursor","float","color","bind","assertThisInitialized","Link","to","marginRight","_this2","_this$props$contact2","isEmail","propName","componentName","test","Error","Contacts","deleteContact","newContact","Fragment","contacts_Contact","key","Header","branding","href","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","AddContact","errors","e","attributeName","target","attributeValue","defineProperty","validateInputs","newErrors","_this$state","onSubmit","_this$state2","res","preventDefault","abrupt","post","sent","data","history","push","_this$state3","layout_TextInputGroup","EditContact","updateContact","match","params","put","alert","get","About","NotFound","Test","title","body","fetch","then","response","json","nextProps","nextState","prevProps","prevState","preState","App","context","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c411a930.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'DELETE_CONTACT':\n            return (\n                {\n                    ...state,\n                    contacts: state.contacts.filter(contact => contact.id !== action.payload)\n                }\n            );\n        case 'UPDATE_CONTACT':\n        console.log('updating!!!')\n            return ({\n                  ...state,\n                  contacts: state.contacts.map(contact => {\n                    if (contact.id == action.payload.id) {\n                        return action.payload;\n                    } else {\n                      return contact;\n                    }\n                  })\n               });\n        case 'ADD_CONTACT':\n            return (\n                {\n                    ...state,\n                    contacts: [action.payload, ...state.contacts]\n                }\n            );\n         default:\n            return state;\n    }\n}\n\nclass Provider extends Component {\n\n  state = {\n    contacts: [\n      {\n        id: 222,\n        name: 'zhang 3',\n        email: 'zs@hotmai.com',\n        phone:  '514-111-1111'\n      },\n      {\n        id: 222,\n        name: 'Li 4',\n        email: 'l4@hotmai.com',\n        phone:  '514-222-2222'\n      },\n      {\n        id: 222,\n        name: 'Wang 5',\n        email: 'w5@hotmai.com',\n        phone: '514-333-3333'\n      }\n    ],\n    dispatch: action => this.setState(reducer(this.state, action))\n}\n\n  render() {\n    return (\n      <div>\n        <Context.Provider value={this.state}>\n            {this.props.children}\n        </Context.Provider>\n      </div>\n    )\n  }\n\n  componentWillUpdate() {\n    console.log('componentWillUpdate lifecyle method of Context.js');\n  }\n\n  componentDidUpdate() {\n    console.log('componentDidUpdate lifecyle method of Context.js');\n  }\n\n  async componentDidMount() {\n    //   axios.get('http://jsonplaceholder.typicode.com/users')\n    //   .then(res => this.setState({contacts: res.data}));\n    // const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n    \n    // add some friends\n\n    // res.data = res.data.unshift(\n    //   {\n    //     id: 222,\n    //     name: 'zhang 3',\n    //     email: 'zs@hotmai.com',\n    //     phone:  '514-111-1111'\n    //   },\n    //   {\n    //     id: 222,\n    //     name: 'Li 4',\n    //     email: 'l4@hotmai.com',\n    //     phone:  '514-222-2222'\n    //   },\n    //   {\n    //     id: 222,\n    //     name: 'Wang 5',\n    //     email: 'w5@hotmai.com',\n    //     phone:  '514-333-3333'\n    //   }\n    // );\n\n    // res.data = res.data.pop();\n    // res.data = res.data.pop();\n    // res.data = res.data.pop();\n    // res.data = res.data.pop();\n    // res.data = res.data.pop();\n\n    // this.setState({contacts: res.data});\n  }\n\n}\n\nexport const Consumer = Context.Consumer;\nexport default Provider;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport './contact.css'\nimport { Consumer } from '../../context'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  static isEmail = (props, propName, componentName) => {\n    const regex = /^((([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,})))?$/;\n  \n    if (!regex.test(props[propName])) {\n      return new Error(`Invalid prop \\`${propName}\\` passed to \\`${componentName}\\`. Expected a valid email address.`);\n    } \n  }\n\n  static propTypes = {\n    // name: PropTypes.string.isRequired,\n    // email: Contact.isEmail,\n    // phone: PropTypes.string.isRequired\n    contact: PropTypes.object.isRequired\n  };\n\n  email = null;\n\n  constructor(props) {\n    super();\n    // this.onShowClick = this.onShowClick.bind(this);\n\n    // if (props.email != null ) {\n    //   this.email = <li> Phone: {props.email}</li>;\n    // }\n  }\n\n  // onShowClick() {\n  //   console.log(this.state)\n  // }\n\n  // onShowClick = (id) => {\n  //   // console.log(id);\n  //   // this.state = {\n  //   //   showContactInfo : false\n  //   // }\n  //   this.setState( {\n  //     showContactInfo: ! this.state.showContactInfo\n  //   })\n  // }\n  onDeleteClick = async (id, dispatch) => {\n    // debugger;\n    // console.log('clicked');\n    // this.props.deleteClickHandler();\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({type: 'DELETE_CONTACT', payload: id})\n    } catch(exp) {\n      dispatch({type: 'DELETE_CONTACT', payload: id})\n    }\n    // .then(res => dispatch({type: 'DELETE_CONTACT', payload: id}))\n\n  }\n\n  renderHelper = value => {\n    const {id, name, email, phone} = this.props.contact;\n    const { showContactInfo } = this.state;\n    const { dispatch } = value;\n    return (\n      <div className=\"card card-body mb-3\">\n      <h4>{name} <i onClick={()=> this.setState({showContactInfo: !this.state.showContactInfo})} className=\"fas fa-sort-down\" style={{cursor: 'pointer' }}></i>\n      <i className=\"fas fa-times\" style={{cursor:'pointer', float: 'right', color: 'red'}}\n      onClick={this.onDeleteClick.bind(this, id, dispatch)}\n      />\n      <Link to={`/edit/${id}`}>\n      <i \n        className=\"fas fa-pencil-alt\" \n        style={{\n          cursor: 'pointer',\n          float: 'right',\n          color: 'black',\n          marginRight: '1rem'\n        }}\n      ></i>\n      </Link>\n      </h4>\n      {showContactInfo? (\n        <ul className=\"list-group\">\n            <li className=\"list-group-item\">Email: {email}</li>\n            <li className=\"list-group-item\">Phone: {phone}</li>\n        </ul>\n        ) : null\n      }\n    </div>\n    )\n  }\n\n  render() {\n    const { showContactInfo } = this.state;\n\n    const { id, name, email, phone} = this.props.contact;\n    return (\n      <Consumer>\n        { value => {\n          return this.renderHelper(value)\n        }}\n\n      </Consumer>      \n    )\n  }\n}\n\n// const isEmail = (props, propName, componentName) => {\n//   const regex = /^((([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,})))?$/;\n\n//   if (!regex.test(props[propName])) {\n//     return new Error(`Invalid prop \\`${propName}\\` passed to \\`${componentName}\\`. Expected a valid email address.`);\n//   } \n// }\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  // deleteClickHandler: PropTypes.func.isRequired\n}\n\nexport default Contact;","import React, { Component } from 'react'\nimport Contact from './Contact'\nimport { Consumer } from '../../context'\n\nexport default class Contacts extends Component {\n\n  constructor() {\n      super();\n      // this.state = {\n      //     contacts: [\n      //         {\n      //             id: 1,\n      //             name: 'John Doe',\n      //             email: 'jdoe@gmail.com',\n      //             phone: '555-555-5555'\n      //         },\n      //         {\n      //             id: 2,\n      //             name: 'Karen Williams',\n      //             email: 'karenw@gmail.com',\n      //             phone: '222-22-2222'\n      //         },\n      //         {\n      //             id: 3,\n      //             name: 'Henry Johnson',\n      //             email: 'henryj@gmail.com',\n      //             phone: '111-111-1111'\n      //         },\n      //     ]\n      // }\n  }\n\n  render() {\n\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"displpay-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>            \n              {contacts.map( contact => \n                  // <h1>{contact.name}</h1>\n                  // <Contact key={contact.id} name={contact.name} email={contact.email} phone={contact.phone}/>\n                  <Contact key={contact.id} contact={contact} />\n              )}\n            </React.Fragment>\n          )\n        }}\n      </Consumer>\n    )\n  }\n\n  deleteContact = id => {\n    const { contacts } = this.state;\n\n    const newContact = contacts.filter(contact => \n      contact.id !== id\n    )\n    \n    this.setState( {\n      contacts: newContact\n    })\n\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport {Link}  from 'react-router-dom'\n\nconst Header = ({branding}) => {\n  return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n        <div className=\"container\">\n         <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n         <div>\n             <ul className=\"navbar-nav mr-auto\">\n               <li className=\"nav-item\">\n                 <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i> Home</Link>\n               </li>\n               <li className=\"nav-item\">\n                 <Link to=\"/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i> Add</Link>\n               </li>\n               <li className=\"nav-item\">\n                 <Link to=\"/about/Hello%20World!\" className=\"nav-link\"><i className=\"fas fa-question\"></i>About</Link>\n               </li>\n               <li className=\"nav-item\">\n                 <Link to=\"/test\" className=\"nav-link\"><i className=\"fas fa-star\"></i>Test</Link>\n               </li>\n             </ul>\n         </div>\n        </div>\n      </nav>\n  )\n}\n\nHeader.defaultProps = {\n    branding: 'My App'\n}\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n}\n\nexport default Header;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst TextInputGroup = ({\n    label, name, value, placeholder, type, onChange, error\n}) => {\n  return (\n    <div className=\"form-group\">\n    <label htmlFor=\"phone\">{label}</label>\n    <input\n        name={name}\n        type={type} \n        className={(error == null)? \"form-control form-control-lg\" : \"is-invalid form-control form-control-lg\"}\n        placeholder={placeholder}     \n        value={value}\n        onChange={onChange}                    \n    />\n    <div className=\"invalid-feedback\">{error}</div>\n</div>\n  )\n}\n\nTextInputGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string,\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n}\n\nexport default TextInputGroup;","import React, { Component } from 'react'\nimport {Consumer} from '../../context'\n// import uuid from 'uuid';\n\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios';\n\nclass AddContact extends Component {\n\n  state = {\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n  }\n\n  onChange = e => {\n      const attributeName = e.target.name;\n      const attributeValue = e.target.value;\n      this.setState(\n          {\n              ...this.state,\n              [attributeName]: attributeValue\n          }\n      )\n\n      this.validateInputs();\n  }\n\n  validateInputs = ()=> {\n    const newErrors = {};\n    const { name, email, phone } = this.state;\n\n     // check for errors\n\n     if (name === '') {\n      newErrors.name = 'Name is required'\n     }\n\n     if (email === '') {\n      newErrors.email = 'Email is required'\n  \n     }\n     if (phone === '') {\n       newErrors.phone = 'Phone is required'\n     }\n\n    //  if (name=== '' || email === '' || phone === '') {\n    this.setState(\n      { errors: newErrors}\n    )\n  }\n\n  onSubmit = async (dispatch, e) => {\n     e.preventDefault();\n     const { name, email, phone } = this.state;\n\n     const newErrors = {};\n\n     // check for errors\n\n     if (name === '') {\n      newErrors.name = 'Name is required'\n     }\n\n     if (email === '') {\n      newErrors.email = 'Email is required'\n  \n     }\n     if (phone === '') {\n       newErrors.phone = 'Phone is required'\n     }\n\n     if (name=== '' || email === '' || phone === '') {\n       this.setState(\n         { errors: newErrors}\n       )\n       return;\n     }\n\n     const newContact = {name, email, phone};\n\n    //  axios.post(`https://jsonplaceholder.typicode.com/users`, newContact)\n    //  .then(res => {\n    //    dispatch({type: 'ADD_CONTACT', payload: res.data});\n    //  });\n    const res = await axios.post(`https://jsonplaceholder.typicode.com/users`, newContact);\n    dispatch({type: 'ADD_CONTACT', payload: res.data});\n\n     // clear form\n     this.setState({\n       name: '',\n       email: '',\n       phone: '',\n       errors: {}\n     })\n\n     this.props.history.push('/')\n  }\n\n  render() {\n    const {name, email, phone, errors} = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n         return (\n          <div className=\"card mb-3\">\n          <div className=\"card-header\">Add Contact</div>\n          <div className=\"card-body\">\n           <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n              <TextInputGroup\n                label='Name'\n                name='name'\n                placeholder='Enter Name...'\n                onChange={this.onChange}\n                value={name}\n                error={errors.name}\n              />\n              <TextInputGroup\n                label='Email'\n                name='email'\n                type='email'\n                placeholder='Enter Email...'\n                onChange={this.onChange}\n                value={email}\n                error={errors.email}\n              />\n              <TextInputGroup\n                label='Phone'\n                name='phone'\n                placeholder='Enter Phone...'\n                onChange={this.onChange}\n                value={phone}\n                error={errors.phone}\n              />\n              <input \n                type=\"submit\" \n                className=\"btn btn-light btn-block\" \n                value=\"Add Contact\" \n              />\n           </form>\n          </div>\n        </div>\n         )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default AddContact; ","import React, { Component } from 'react'\nimport {Consumer} from '../../context'\n// import uuid from 'uuid';\n\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios';\n\nclass EditContact extends Component {\n\n  state = {\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n  }\n\n  async componentDidMount() {\n\n    const {id} = this.props.match.params;\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\n    const {name, email, phone} = res.data;\n    this.setState({\n        name,\n        email,\n        phone\n    })\n  }\n\n  onChange = e => {\n      const attributeName = e.target.name;\n      const attributeValue = e.target.value;\n      this.setState(\n          {\n              ...this.state,\n              [attributeName]: attributeValue\n          }\n      )\n\n      this.validateInputs();\n  }\n\n  validateInputs = ()=> {\n    const newErrors = {};\n    const { name, email, phone } = this.state;\n\n     // check for errors\n\n     if (name === '') {\n      newErrors.name = 'Name is required'\n     }\n\n     if (email === '') {\n      newErrors.email = 'Email is required'\n  \n     }\n     if (phone === '') {\n       newErrors.phone = 'Phone is required'\n     }\n\n    //  if (name=== '' || email === '' || phone === '') {\n    this.setState(\n      { errors: newErrors}\n    )\n  }\n\n  onSubmit = async (dispatch, e) => {\n     e.preventDefault();\n     const {id} = this.props.match.params;\n     const { name, email, phone } = this.state;\n\n     const newErrors = {};\n\n     // check for errors\n\n     if (name === '') {\n      newErrors.name = 'Name is required'\n     }\n\n     if (email === '') {\n      newErrors.email = 'Email is required'\n  \n     }\n     if (phone === '') {\n       newErrors.phone = 'Phone is required'\n     }\n\n     if (name=== '' || email === '' || phone === '') {\n       this.setState(\n         { errors: newErrors}\n       )\n       return;\n     }\n\n     const updateContact = {id, name, email, phone};\n\n    //  axios.post(`https://jsonplaceholder.typicode.com/users`, newContact)\n    //  .then(res => {\n    //    dispatch({type: 'ADD_CONTACT', payload: res.data});\n    //  });\n    // const res = await axios.post(`https://jsonplaceholder.typicode.com/users`, newContact);\n    // dispatch({type: 'ADD_CONTACT', payload: res.data});\n\n    this.setState(updateContact)\n\n    try {\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\n        dispatch({\n            type: 'UPDATE_CONTACT',payload: res.data\n        })\n        this.props.history.push('/')\n    } catch (exp) {\n        alert('data not saved due to error!')\n    }\n  }\n\n  render() {\n    const {name, email, phone, errors} = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n         return (\n          <div className=\"card mb-3\">\n          <div className=\"card-header\">Update Contact</div>\n          <div className=\"card-body\">\n           <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n              <TextInputGroup\n                label='Name'\n                name='name'\n                placeholder='Enter Name...'\n                onChange={this.onChange}\n                value={name}\n                error={errors.name}\n              />\n              <TextInputGroup\n                label='Email'\n                name='email'\n                type='email'\n                placeholder='Enter Email...'\n                onChange={this.onChange}\n                value={email}\n                error={errors.email}\n              />\n              <TextInputGroup\n                label='Phone'\n                name='phone'\n                placeholder='Enter Phone...'\n                onChange={this.onChange}\n                value={phone}\n                error={errors.phone}\n              />\n              <input \n                type=\"submit\" \n                className=\"btn btn-light btn-block\" \n                value=\"Save Changes\" \n              />\n           </form>\n          </div>\n        </div>\n         )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default EditContact; ","import React from 'react'\n\nexport default function About(props) {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager {props.match.params.id}</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4 text-danger\">404 Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\n\nclass Test extends Component {\n  state = {\n      title: '',\n      body: ''\n  };\n\n  componentWillMount() {\n    console.log('componentWillMount');\n  }\n\n  componentDidMount() {\n      console.log('componentDidMount');\n      fetch('https://jsonplaceholder.typicode.com/posts/1').then(response=>response.json())\n      .then(json=> this.setState({title: json.title, body: json.body}));\n  }\n\n  componentWillUpdate() {\n      console.log('componentWillUpdate');\n  }\n\n  componentWillReceiveProps(nextProps, nextState) {\n      console.log('componentWillReceiveProps');\n  }\n\n  static getDerivedStateFromProps(nextProps, preState) {\n    return {\n        test: 'something'\n    };\n  }\n\n  getDerivedStateFromProps(prevProps, prevState) {\n      console.log('getDerivedStateFromProps')\n  }\n\n  render() {\n    const {title, body} = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p className=\"text-secondary\">{body}</p>\n      </div>\n    )\n  }\n}\n\nexport default Test;","import React, { Component } from 'react';\nimport Contacts from './components/contacts/Contacts'\nimport Header from './components/layout/Header'\nimport Provider from './context'\nimport AddContact from './components/contacts/AddContact'\nimport EditContact from './components/contacts/EditContact'\nimport About from './components/pages/About'\nimport NotFound from './components/pages/NotFound'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {HashRouter as Router, Route,Switch} from 'react-router-dom'\nimport Test from './components/test/Test'\n\nclass App extends Component {\n  render() {\n    // const name = 'World';\n    // const showHello = true;\n\n    return (\n      // React.createElement(\n      //   'div',\n      //   {className: 'App'},\n      //   React.createElement(\n      //     'hi',\n      //     null,\n      //     'The App Component without Sugar!'\n      //   )\n      // )\n      <Provider>\n      <Router>\n      <div className=\"App\">\n        <Header branding=\"Contact Manager\" />\n        <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\" component={Contacts} />\n          <Route exact path=\"/add\" component={AddContact} />\n          <Route exact path=\"/edit/:id\" component={EditContact} />\n          <Route exact path=\"/about/:id\" component={About} />\n          <Route exact path=\"/test\" component={Test} />\n          <Route component={NotFound} />\n        </Switch>\n        </div>\n      </div>\n      </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}