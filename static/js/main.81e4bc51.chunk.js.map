{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","console","log","map","concat","toConsumableArray","Provider","dispatch","_this","setState","react_default","a","createElement","value","this","props","children","axios","get","res","data","Component","Consumer","Contact","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showContactInfo","email","onDeleteClick","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","delete","t0","stop","_x","_x2","apply","arguments","renderHelper","_this$props$contact","name","phone","className","onClick","style","cursor","float","color","bind","assertThisInitialized","Link","to","marginRight","_this2","_this$props$contact2","isEmail","propName","componentName","test","Error","Contacts","deleteContact","newContact","Fragment","contacts_Contact","key","Header","branding","href","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","AddContact","errors","e","attributeName","target","attributeValue","defineProperty","validateInputs","newErrors","_this$state","onSubmit","_this$state2","preventDefault","abrupt","post","sent","history","push","_this$state3","layout_TextInputGroup","EditContact","updateContact","match","params","put","alert","About","NotFound","Test","title","body","fetch","then","response","json","nextProps","nextState","prevProps","prevState","preState","App","context","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81e4bc51.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'DELETE_CONTACT':\n            return (\n                {\n                    ...state,\n                    contacts: state.contacts.filter(contact => contact.id !== action.payload)\n                }\n            );\n        case 'UPDATE_CONTACT':\n        console.log('updating!!!')\n            return ({\n                  ...state,\n                  contacts: state.contacts.map(contact => {\n                    if (contact.id == action.payload.id) {\n                        return action.payload;\n                    } else {\n                      return contact;\n                    }\n                  })\n               });\n        case 'ADD_CONTACT':\n            return (\n                {\n                    ...state,\n                    contacts: [action.payload, ...state.contacts]\n                }\n            );\n         default:\n            return state;\n    }\n}\n\nclass Provider extends Component {\n\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(reducer(this.state, action))\n}\n\n  render() {\n    return (\n      <div>\n        <Context.Provider value={this.state}>\n            {this.props.children}\n        </Context.Provider>\n      </div>\n    )\n  }\n\n  componentWillUpdate() {\n    console.log('componentWillUpdate lifecyle method of Context.js');\n  }\n\n  componentDidUpdate() {\n    console.log('componentDidUpdate lifecyle method of Context.js');\n  }\n\n  async componentDidMount() {\n    //   axios.get('http://jsonplaceholder.typicode.com/users')\n    //   .then(res => this.setState({contacts: res.data}));\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n    \n    // add some friends\n\n    // res.data = res.data.unshift(\n    //   {\n    //     id: 222,\n    //     name: 'zhang 3',\n    //     email: 'zs@hotmai.com',\n    //     phone:  '514-111-1111'\n    //   },\n    //   {\n    //     id: 222,\n    //     name: 'Li 4',\n    //     email: 'l4@hotmai.com',\n    //     phone:  '514-222-2222'\n    //   },\n    //   {\n    //     id: 222,\n    //     name: 'Wang 5',\n    //     email: 'w5@hotmai.com',\n    //     phone:  '514-333-3333'\n    //   }\n    // );\n\n        this.setState({contacts: res.data});\n  }\n\n}\n\nexport const Consumer = Context.Consumer;\nexport default Provider;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport './contact.css'\nimport { Consumer } from '../../context'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  static isEmail = (props, propName, componentName) => {\n    const regex = /^((([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,})))?$/;\n  \n    if (!regex.test(props[propName])) {\n      return new Error(`Invalid prop \\`${propName}\\` passed to \\`${componentName}\\`. Expected a valid email address.`);\n    } \n  }\n\n  static propTypes = {\n    // name: PropTypes.string.isRequired,\n    // email: Contact.isEmail,\n    // phone: PropTypes.string.isRequired\n    contact: PropTypes.object.isRequired\n  };\n\n  email = null;\n\n  constructor(props) {\n    super();\n    // this.onShowClick = this.onShowClick.bind(this);\n\n    // if (props.email != null ) {\n    //   this.email = <li> Phone: {props.email}</li>;\n    // }\n  }\n\n  // onShowClick() {\n  //   console.log(this.state)\n  // }\n\n  // onShowClick = (id) => {\n  //   // console.log(id);\n  //   // this.state = {\n  //   //   showContactInfo : false\n  //   // }\n  //   this.setState( {\n  //     showContactInfo: ! this.state.showContactInfo\n  //   })\n  // }\n  onDeleteClick = async (id, dispatch) => {\n    // debugger;\n    // console.log('clicked');\n    // this.props.deleteClickHandler();\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({type: 'DELETE_CONTACT', payload: id})\n    } catch(exp) {\n      dispatch({type: 'DELETE_CONTACT', payload: id})\n    }\n    // .then(res => dispatch({type: 'DELETE_CONTACT', payload: id}))\n\n  }\n\n  renderHelper = value => {\n    const {id, name, email, phone} = this.props.contact;\n    const { showContactInfo } = this.state;\n    const { dispatch } = value;\n    return (\n      <div className=\"card card-body mb-3\">\n      <h4>{name} <i onClick={()=> this.setState({showContactInfo: !this.state.showContactInfo})} className=\"fas fa-sort-down\" style={{cursor: 'pointer' }}></i>\n      <i className=\"fas fa-times\" style={{cursor:'pointer', float: 'right', color: 'red'}}\n      onClick={this.onDeleteClick.bind(this, id, dispatch)}\n      />\n      <Link to={`/edit/${id}`}>\n      <i \n        className=\"fas fa-pencil-alt\" \n        style={{\n          cursor: 'pointer',\n          float: 'right',\n          color: 'black',\n          marginRight: '1rem'\n        }}\n      ></i>\n      </Link>\n      </h4>\n      {showContactInfo? (\n        <ul className=\"list-group\">\n            <li className=\"list-group-item\">Email: {email}</li>\n            <li className=\"list-group-item\">Phone: {phone}</li>\n        </ul>\n        ) : null\n      }\n    </div>\n    )\n  }\n\n  render() {\n    const { showContactInfo } = this.state;\n\n    const { id, name, email, phone} = this.props.contact;\n    return (\n      <Consumer>\n        { value => {\n          return this.renderHelper(value)\n        }}\n\n      </Consumer>      \n    )\n  }\n}\n\n// const isEmail = (props, propName, componentName) => {\n//   const regex = /^((([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,})))?$/;\n\n//   if (!regex.test(props[propName])) {\n//     return new Error(`Invalid prop \\`${propName}\\` passed to \\`${componentName}\\`. Expected a valid email address.`);\n//   } \n// }\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  // deleteClickHandler: PropTypes.func.isRequired\n}\n\nexport default Contact;","import React, { Component } from 'react'\nimport Contact from './Contact'\nimport { Consumer } from '../../context'\n\nexport default class Contacts extends Component {\n\n  constructor() {\n      super();\n      // this.state = {\n      //     contacts: [\n      //         {\n      //             id: 1,\n      //             name: 'John Doe',\n      //             email: 'jdoe@gmail.com',\n      //             phone: '555-555-5555'\n      //         },\n      //         {\n      //             id: 2,\n      //             name: 'Karen Williams',\n      //             email: 'karenw@gmail.com',\n      //             phone: '222-22-2222'\n      //         },\n      //         {\n      //             id: 3,\n      //             name: 'Henry Johnson',\n      //             email: 'henryj@gmail.com',\n      //             phone: '111-111-1111'\n      //         },\n      //     ]\n      // }\n  }\n\n  render() {\n\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"displpay-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>            \n              {contacts.map( contact => \n                  // <h1>{contact.name}</h1>\n                  // <Contact key={contact.id} name={contact.name} email={contact.email} phone={contact.phone}/>\n                  <Contact key={contact.id} contact={contact} />\n              )}\n            </React.Fragment>\n          )\n        }}\n      </Consumer>\n    )\n  }\n\n  deleteContact = id => {\n    const { contacts } = this.state;\n\n    const newContact = contacts.filter(contact => \n      contact.id !== id\n    )\n    \n    this.setState( {\n      contacts: newContact\n    })\n\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport {Link}  from 'react-router-dom'\n\nconst Header = ({branding}) => {\n  return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n        <div className=\"container\">\n         <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n         <div>\n             <ul className=\"navbar-nav mr-auto\">\n               <li className=\"nav-item\">\n                 <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i> Home</Link>\n               </li>\n               <li className=\"nav-item\">\n                 <Link to=\"/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i> Add</Link>\n               </li>\n               <li className=\"nav-item\">\n                 <Link to=\"/about/Hello%20World!\" className=\"nav-link\"><i className=\"fas fa-question\"></i>About</Link>\n               </li>\n               <li className=\"nav-item\">\n                 <Link to=\"/test\" className=\"nav-link\"><i className=\"fas fa-star\"></i>Test</Link>\n               </li>\n             </ul>\n         </div>\n        </div>\n      </nav>\n  )\n}\n\nHeader.defaultProps = {\n    branding: 'My App'\n}\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n}\n\nexport default Header;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst TextInputGroup = ({\n    label, name, value, placeholder, type, onChange, error\n}) => {\n  return (\n    <div className=\"form-group\">\n    <label htmlFor=\"phone\">{label}</label>\n    <input\n        name={name}\n        type={type} \n        className={(error == null)? \"form-control form-control-lg\" : \"is-invalid form-control form-control-lg\"}\n        placeholder={placeholder}     \n        value={value}\n        onChange={onChange}                    \n    />\n    <div className=\"invalid-feedback\">{error}</div>\n</div>\n  )\n}\n\nTextInputGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string,\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n}\n\nexport default TextInputGroup;","import React, { Component } from 'react'\nimport {Consumer} from '../../context'\n// import uuid from 'uuid';\n\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios';\n\nclass AddContact extends Component {\n\n  state = {\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n  }\n\n  onChange = e => {\n      const attributeName = e.target.name;\n      const attributeValue = e.target.value;\n      this.setState(\n          {\n              ...this.state,\n              [attributeName]: attributeValue\n          }\n      )\n\n      this.validateInputs();\n  }\n\n  validateInputs = ()=> {\n    const newErrors = {};\n    const { name, email, phone } = this.state;\n\n     // check for errors\n\n     if (name === '') {\n      newErrors.name = 'Name is required'\n     }\n\n     if (email === '') {\n      newErrors.email = 'Email is required'\n  \n     }\n     if (phone === '') {\n       newErrors.phone = 'Phone is required'\n     }\n\n    //  if (name=== '' || email === '' || phone === '') {\n    this.setState(\n      { errors: newErrors}\n    )\n  }\n\n  onSubmit = async (dispatch, e) => {\n     e.preventDefault();\n     const { name, email, phone } = this.state;\n\n     const newErrors = {};\n\n     // check for errors\n\n     if (name === '') {\n      newErrors.name = 'Name is required'\n     }\n\n     if (email === '') {\n      newErrors.email = 'Email is required'\n  \n     }\n     if (phone === '') {\n       newErrors.phone = 'Phone is required'\n     }\n\n     if (name=== '' || email === '' || phone === '') {\n       this.setState(\n         { errors: newErrors}\n       )\n       return;\n     }\n\n     const newContact = {name, email, phone};\n\n    //  axios.post(`https://jsonplaceholder.typicode.com/users`, newContact)\n    //  .then(res => {\n    //    dispatch({type: 'ADD_CONTACT', payload: res.data});\n    //  });\n    const res = await axios.post(`https://jsonplaceholder.typicode.com/users`, newContact);\n    dispatch({type: 'ADD_CONTACT', payload: res.data});\n\n     // clear form\n     this.setState({\n       name: '',\n       email: '',\n       phone: '',\n       errors: {}\n     })\n\n     this.props.history.push('/')\n  }\n\n  render() {\n    const {name, email, phone, errors} = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n         return (\n          <div className=\"card mb-3\">\n          <div className=\"card-header\">Add Contact</div>\n          <div className=\"card-body\">\n           <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n              <TextInputGroup\n                label='Name'\n                name='name'\n                placeholder='Enter Name...'\n                onChange={this.onChange}\n                value={name}\n                error={errors.name}\n              />\n              <TextInputGroup\n                label='Email'\n                name='email'\n                type='email'\n                placeholder='Enter Email...'\n                onChange={this.onChange}\n                value={email}\n                error={errors.email}\n              />\n              <TextInputGroup\n                label='Phone'\n                name='phone'\n                placeholder='Enter Phone...'\n                onChange={this.onChange}\n                value={phone}\n                error={errors.phone}\n              />\n              <input \n                type=\"submit\" \n                className=\"btn btn-light btn-block\" \n                value=\"Add Contact\" \n              />\n           </form>\n          </div>\n        </div>\n         )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default AddContact; ","import React, { Component } from 'react'\nimport {Consumer} from '../../context'\n// import uuid from 'uuid';\n\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios';\n\nclass EditContact extends Component {\n\n  state = {\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n  }\n\n  async componentDidMount() {\n\n    const {id} = this.props.match.params;\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\n    const {name, email, phone} = res.data;\n    this.setState({\n        name,\n        email,\n        phone\n    })\n  }\n\n  onChange = e => {\n      const attributeName = e.target.name;\n      const attributeValue = e.target.value;\n      this.setState(\n          {\n              ...this.state,\n              [attributeName]: attributeValue\n          }\n      )\n\n      this.validateInputs();\n  }\n\n  validateInputs = ()=> {\n    const newErrors = {};\n    const { name, email, phone } = this.state;\n\n     // check for errors\n\n     if (name === '') {\n      newErrors.name = 'Name is required'\n     }\n\n     if (email === '') {\n      newErrors.email = 'Email is required'\n  \n     }\n     if (phone === '') {\n       newErrors.phone = 'Phone is required'\n     }\n\n    //  if (name=== '' || email === '' || phone === '') {\n    this.setState(\n      { errors: newErrors}\n    )\n  }\n\n  onSubmit = async (dispatch, e) => {\n     e.preventDefault();\n     const {id} = this.props.match.params;\n     const { name, email, phone } = this.state;\n\n     const newErrors = {};\n\n     // check for errors\n\n     if (name === '') {\n      newErrors.name = 'Name is required'\n     }\n\n     if (email === '') {\n      newErrors.email = 'Email is required'\n  \n     }\n     if (phone === '') {\n       newErrors.phone = 'Phone is required'\n     }\n\n     if (name=== '' || email === '' || phone === '') {\n       this.setState(\n         { errors: newErrors}\n       )\n       return;\n     }\n\n     const updateContact = {id, name, email, phone};\n\n    //  axios.post(`https://jsonplaceholder.typicode.com/users`, newContact)\n    //  .then(res => {\n    //    dispatch({type: 'ADD_CONTACT', payload: res.data});\n    //  });\n    // const res = await axios.post(`https://jsonplaceholder.typicode.com/users`, newContact);\n    // dispatch({type: 'ADD_CONTACT', payload: res.data});\n\n    this.setState(updateContact)\n\n    try {\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\n        dispatch({\n            type: 'UPDATE_CONTACT',payload: res.data\n        })\n        this.props.history.push('/')\n    } catch (exp) {\n        alert('data not saved due to error!')\n    }\n  }\n\n  render() {\n    const {name, email, phone, errors} = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n         return (\n          <div className=\"card mb-3\">\n          <div className=\"card-header\">Update Contact</div>\n          <div className=\"card-body\">\n           <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n              <TextInputGroup\n                label='Name'\n                name='name'\n                placeholder='Enter Name...'\n                onChange={this.onChange}\n                value={name}\n                error={errors.name}\n              />\n              <TextInputGroup\n                label='Email'\n                name='email'\n                type='email'\n                placeholder='Enter Email...'\n                onChange={this.onChange}\n                value={email}\n                error={errors.email}\n              />\n              <TextInputGroup\n                label='Phone'\n                name='phone'\n                placeholder='Enter Phone...'\n                onChange={this.onChange}\n                value={phone}\n                error={errors.phone}\n              />\n              <input \n                type=\"submit\" \n                className=\"btn btn-light btn-block\" \n                value=\"Save Changes\" \n              />\n           </form>\n          </div>\n        </div>\n         )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default EditContact; ","import React from 'react'\n\nexport default function About(props) {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager {props.match.params.id}</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4 text-danger\">404 Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\n\nclass Test extends Component {\n  state = {\n      title: '',\n      body: ''\n  };\n\n  componentWillMount() {\n    console.log('componentWillMount');\n  }\n\n  componentDidMount() {\n      console.log('componentDidMount');\n      fetch('https://jsonplaceholder.typicode.com/posts/1').then(response=>response.json())\n      .then(json=> this.setState({title: json.title, body: json.body}));\n  }\n\n  componentWillUpdate() {\n      console.log('componentWillUpdate');\n  }\n\n  componentWillReceiveProps(nextProps, nextState) {\n      console.log('componentWillReceiveProps');\n  }\n\n  static getDerivedStateFromProps(nextProps, preState) {\n    return {\n        test: 'something'\n    };\n  }\n\n  getDerivedStateFromProps(prevProps, prevState) {\n      console.log('getDerivedStateFromProps')\n  }\n\n  render() {\n    const {title, body} = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p className=\"text-secondary\">{body}</p>\n      </div>\n    )\n  }\n}\n\nexport default Test;","import React, { Component } from 'react';\nimport Contacts from './components/contacts/Contacts'\nimport Header from './components/layout/Header'\nimport Provider from './context'\nimport AddContact from './components/contacts/AddContact'\nimport EditContact from './components/contacts/EditContact'\nimport About from './components/pages/About'\nimport NotFound from './components/pages/NotFound'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {HashRouter as Router, Route,Switch} from 'react-router-dom'\nimport Test from './components/test/Test'\n\nclass App extends Component {\n  render() {\n    // const name = 'World';\n    // const showHello = true;\n\n    return (\n      // React.createElement(\n      //   'div',\n      //   {className: 'App'},\n      //   React.createElement(\n      //     'hi',\n      //     null,\n      //     'The App Component without Sugar!'\n      //   )\n      // )\n      <Provider>\n      <Router>\n      <div className=\"App\">\n        <Header branding=\"Contact Manager\" />\n        <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\" component={Contacts} />\n          <Route exact path=\"/add\" component={AddContact} />\n          <Route exact path=\"/edit/:id\" component={EditContact} />\n          <Route exact path=\"/about/:id\" component={About} />\n          <Route exact path=\"/test\" component={Test} />\n          <Route component={NotFound} />\n        </Switch>\n        </div>\n      </div>\n      </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}